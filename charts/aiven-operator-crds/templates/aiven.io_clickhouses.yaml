---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: clickhouses.aiven.io
spec:
  group: aiven.io
  names:
    kind: Clickhouse
    listKind: ClickhouseList
    plural: clickhouses
    singular: clickhouse
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.project
          name: Project
          type: string
        - jsonPath: .spec.cloudName
          name: Region
          type: string
        - jsonPath: .spec.plan
          name: Plan
          type: string
        - jsonPath: .status.state
          name: State
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: |-
            Clickhouse is the Schema for the clickhouses API.
            Info "Exposes secret keys": `CLICKHOUSE_HOST`, `CLICKHOUSE_PORT`, `CLICKHOUSE_USER`, `CLICKHOUSE_PASSWORD`
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ClickhouseSpec defines the desired state of Clickhouse
              properties:
                authSecretRef:
                  description: Authentication reference to Aiven token in a secret
                  properties:
                    key:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                  required:
                    - key
                    - name
                  type: object
                cloudName:
                  description: Cloud the service runs in.
                  maxLength: 256
                  type: string
                connInfoSecretTarget:
                  description: Secret configuration.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations added to the secret
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels added to the secret
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    name:
                      description:
                        Name of the secret resource to be created. By default,
                        it is equal to the resource name
                      type: string
                      x-kubernetes-validations:
                        - message: Value is immutable
                          rule: self == oldSelf
                    prefix:
                      description: |-
                        Prefix for the secret's keys.
                        Added "as is" without any transformations.
                        By default, is equal to the kind name in uppercase + underscore, e.g. `KAFKA_`, `REDIS_`, etc.
                      type: string
                  required:
                    - name
                  type: object
                connInfoSecretTargetDisabled:
                  description:
                    When true, the secret containing connection information
                    will not be created, defaults to false. This field cannot be changed
                    after resource creation.
                  type: boolean
                  x-kubernetes-validations:
                    - message: connInfoSecretTargetDisabled is immutable.
                      rule: self == oldSelf
                disk_space:
                  description: |-
                    The disk space of the service, possible values depend on the service type, the cloud provider and the project.
                    Reducing will result in the service re-balancing.
                    The removal of this field does not change the value.
                  pattern: (?i)^[1-9][0-9]*(GiB|G)?$
                  type: string
                maintenanceWindowDow:
                  description:
                    Day of week when maintenance operations should be performed.
                    One monday, tuesday, wednesday, etc.
                  enum:
                    - monday
                    - tuesday
                    - wednesday
                    - thursday
                    - friday
                    - saturday
                    - sunday
                  type: string
                maintenanceWindowTime:
                  description:
                    Time of day when maintenance operations should be performed.
                    UTC time in HH:mm:ss format.
                  maxLength: 8
                  type: string
                plan:
                  description: Subscription plan.
                  maxLength: 128
                  type: string
                powered:
                  default: true
                  description: |-
                    Determines the power state of the service. When `true` (default), the service is running.
                    When `false`, the service is powered off.
                    For more information please see [Aiven documentation](https://aiven.io/docs/platform/concepts/service-power-cycle).
                    Note that:
                    - When set to `false` the annotation `controllers.aiven.io/instance-is-running` is also set to `false`.
                    - Services cannot be created in a powered off state. The value is ignored during creation.
                    - It is highly recommended to not run dependent resources when the service is powered off.
                      Creating a new resource or updating an existing resource that depends on a powered off service will result in an error.
                      Existing resources will need to be manually recreated after the service is powered on.
                    - Existing secrets will not be updated or removed when the service is powered off.
                    - For Kafka services with backups: Topic configuration, schemas and connectors are all backed up, but not the data in topics. All topic data is lost on power off.
                    - For Kafka services without backups: Topic configurations including all topic data is lost on power off.
                  type: boolean
                project:
                  description: Identifies the project this resource belongs to
                  maxLength: 63
                  pattern: ^[a-zA-Z0-9_-]+$
                  type: string
                  x-kubernetes-validations:
                    - message: Value is immutable
                      rule: self == oldSelf
                projectVPCRef:
                  description:
                    ProjectVPCRef reference to ProjectVPC resource to use
                    its ID as ProjectVPCID automatically
                  properties:
                    name:
                      minLength: 1
                      type: string
                    namespace:
                      minLength: 1
                      type: string
                  required:
                    - name
                  type: object
                projectVpcId:
                  description: Identifier of the VPC the service should be in, if any.
                  maxLength: 36
                  type: string
                serviceIntegrations:
                  description:
                    Service integrations to specify when creating a service.
                    Not applied after initial service creation
                  items:
                    description:
                      Service integrations to specify when creating a service.
                      Not applied after initial service creation
                    properties:
                      integrationType:
                        enum:
                          - read_replica
                        type: string
                      sourceServiceName:
                        maxLength: 64
                        minLength: 1
                        type: string
                    required:
                      - integrationType
                      - sourceServiceName
                    type: object
                  maxItems: 1
                  type: array
                  x-kubernetes-validations:
                    - message: Value is immutable
                      rule: self == oldSelf
                tags:
                  additionalProperties:
                    type: string
                  description:
                    Tags are key-value pairs that allow you to categorize
                    services.
                  type: object
                technicalEmails:
                  description:
                    Defines the email addresses that will receive alerts
                    about upcoming maintenance updates or warnings about service instability.
                  items:
                    properties:
                      email:
                        description: Email address.
                        pattern: ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$
                        type: string
                    required:
                      - email
                    type: object
                  maxItems: 10
                  type: array
                terminationProtection:
                  description:
                    Prevent service from being deleted. It is recommended
                    to have this enabled for all services.
                  type: boolean
                userConfig:
                  description: OpenSearch specific user configuration options
                  properties:
                    additional_backup_regions:
                      description: Deprecated. Additional Cloud Regions for Backup Replication
                      items:
                        type: string
                      maxItems: 1
                      type: array
                    backup_hour:
                      description:
                        The hour of day (in UTC) when backup for the service
                        is started. New backup is only started if previous backup has
                        already completed.
                      maximum: 23
                      minimum: 0
                      type: integer
                    backup_minute:
                      description:
                        The minute of an hour when backup for the service
                        is started. New backup is only started if previous backup has
                        already completed.
                      maximum: 59
                      minimum: 0
                      type: integer
                    enable_ipv6:
                      description:
                        Register AAAA DNS records for the service, and allow
                        IPv6 packets to service ports
                      type: boolean
                    ip_filter:
                      description:
                        Allow incoming connections from CIDR address block,
                        e.g. '10.20.0.0/16'
                      items:
                        description:
                          CIDR address block, either as a string, or in a
                          dict with an optional description field
                        properties:
                          description:
                            description: Description for IP filter list entry
                            maxLength: 1024
                            type: string
                          network:
                            description: CIDR address block
                            maxLength: 43
                            type: string
                        required:
                          - network
                        type: object
                      maxItems: 8000
                      type: array
                    private_access:
                      description:
                        Allow access to selected service ports from private
                        networks
                      properties:
                        clickhouse:
                          description:
                            Allow clients to connect to clickhouse with a
                            DNS name that always resolves to the service's private IP
                            addresses. Only available in certain network locations
                          type: boolean
                        clickhouse_https:
                          description:
                            Allow clients to connect to clickhouse_https
                            with a DNS name that always resolves to the service's private
                            IP addresses. Only available in certain network locations
                          type: boolean
                        clickhouse_mysql:
                          description:
                            Allow clients to connect to clickhouse_mysql
                            with a DNS name that always resolves to the service's private
                            IP addresses. Only available in certain network locations
                          type: boolean
                        prometheus:
                          description:
                            Allow clients to connect to prometheus with a
                            DNS name that always resolves to the service's private IP
                            addresses. Only available in certain network locations
                          type: boolean
                      type: object
                    privatelink_access:
                      description:
                        Allow access to selected service components through
                        Privatelink
                      properties:
                        clickhouse:
                          description: Enable clickhouse
                          type: boolean
                        clickhouse_https:
                          description: Enable clickhouse_https
                          type: boolean
                        clickhouse_mysql:
                          description: Enable clickhouse_mysql
                          type: boolean
                        prometheus:
                          description: Enable prometheus
                          type: boolean
                      type: object
                    project_to_fork_from:
                      description:
                        Name of another project to fork a service from. This
                        has effect only when a new service is being created.
                      maxLength: 63
                      pattern: ^[a-z][-a-z0-9]{0,63}$|^$
                      type: string
                      x-kubernetes-validations:
                        - message: Value is immutable
                          rule: self == oldSelf
                    public_access:
                      description:
                        Allow access to selected service ports from the public
                        Internet
                      properties:
                        clickhouse:
                          description:
                            Allow clients to connect to clickhouse from the
                            public internet for service nodes that are in a project
                            VPC or another type of private network
                          type: boolean
                        clickhouse_https:
                          description:
                            Allow clients to connect to clickhouse_https
                            from the public internet for service nodes that are in a
                            project VPC or another type of private network
                          type: boolean
                        clickhouse_mysql:
                          description:
                            Allow clients to connect to clickhouse_mysql
                            from the public internet for service nodes that are in a
                            project VPC or another type of private network
                          type: boolean
                        prometheus:
                          description:
                            Allow clients to connect to prometheus from the
                            public internet for service nodes that are in a project
                            VPC or another type of private network
                          type: boolean
                      type: object
                    recovery_basebackup_name:
                      description: Name of the basebackup to restore in forked service
                      maxLength: 128
                      pattern: ^[a-zA-Z0-9-_:.+]+$
                      type: string
                    service_log:
                      description:
                        Store logs for the service so that they are available
                        in the HTTP API and console.
                      type: boolean
                    service_to_fork_from:
                      description:
                        Name of another service to fork from. This has effect
                        only when a new service is being created.
                      maxLength: 64
                      pattern: ^[a-z][-a-z0-9]{0,63}$|^$
                      type: string
                      x-kubernetes-validations:
                        - message: Value is immutable
                          rule: self == oldSelf
                    static_ips:
                      description: Use static public IP addresses
                      type: boolean
                  type: object
              required:
                - plan
                - project
              type: object
              x-kubernetes-validations:
                - message:
                    connInfoSecretTargetDisabled can only be set during resource
                    creation.
                  rule: has(oldSelf.connInfoSecretTargetDisabled) == has(self.connInfoSecretTargetDisabled)
            status:
              description: ServiceStatus defines the observed state of service
              properties:
                conditions:
                  description:
                    Conditions represent the latest available observations
                    of a service state
                  items:
                    description:
                      "Condition contains details for one aspect of the current
                      state of this API Resource.\n---\nThis struct is intended for
                      direct use as an array at the field path .status.conditions.  For
                      example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                      observations of a foo's current state.\n\t    // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                      +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                      \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                      \   // other fields\n\t}"
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          ---
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict is important.
                          The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                state:
                  description: Service state
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
